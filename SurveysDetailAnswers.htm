<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset='utf-8'>
  <meta name="viewport" content="width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.0" />
  <title>Surveys
  </title>
  <script type='text/javascript' src='cordova'></script>
<script src="js/MyJobs.js"></script>
  <script type='text/javascript' src='js/jquery-1.11.1.min.js'></script>
  <script type='text/javascript' src='js/jquery.mobile-1.4.2.min.js'></script>
  <link rel="stylesheet" type="text/css" href="css/jquery.mobile-1.4.2.min.css">

<script src="js/jquery.mobile.datepicker.js"></script>
<script src="js/jquery-ui/datepicker.js"></script>


<script type='text/javascript' src="tablesorter/js/jquery.tablesorter.js"></script>
<script type='text/javascript' src="tablesorter/js/jquery.tablesorter.widgets.js"></script>

<script src="js/jquery.magnific-popup.min.js"></script>

<link rel="stylesheet" type="text/css" href="tablesorter/css/theme.jui.css">
<link rel="stylesheet" type="text/css" href="tablesorter/css/theme.bootstrap.css">
<link rel="stylesheet" type="text/css" href="tablesorter/docs/css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="css/jquery-ui.css">
<link rel="stylesheet" href="css/magnific-popup.css" />


<script>
if(localStorage.getItem("AppType")=="WEB"){
	var db = openDatabase('MyJobsDB', '1.0', 'MyJobsDB', 2000000);	
	
	}else{
	
	var db=window.sqlitePlugin.openDatabase({name: "MyJobsDB"});
	
	}
</script>


  <style type='text/css'>
  .stripe{
	background-color: lightgrey; 
	color: black;
}
.checkboxtext
{
  /* Checkbox text */
  font-size: 110%;
  display: inline;
}
   .wrapper {
  position: relative;
  padding: 0 5px;
  height: 250px;
  overflow-y: auto;
}
 .mfp-fade.mfp-bg {
	opacity: 0.001; /* Chrome opacity transition bug */
	-webkit-transition: all 0.15s ease-out; 
	-moz-transition: all 0.15s ease-out; 
	transition: all 0.15s ease-out;
}
.mfp-fade.mfp-bg.mfp-ready {
	opacity: 0.8;
}
.mfp-fade.mfp-bg.mfp-removing {
	opacity: 0;
}

.mfp-fade.mfp-wrap .mfp-content {
	opacity: 0;
	-webkit-transition: all 0.15s ease-out; 
	-moz-transition: all 0.15s ease-out; 
	transition: all 0.15s ease-out;
}
.mfp-fade.mfp-wrap.mfp-ready .mfp-content {
	opacity: 1;
}
.mfp-fade.mfp-wrap.mfp-removing .mfp-content {
	opacity: 0;
}
  .block {
    border: 1px solid grey;
    width: 180px;
    height:150px;
    display: inline-block;
    margin: 1em 1em 1em 1em;

border-radius: 15px;
    left:50px
}
  .highlight {

     box-shadow: 5px 5px 5px #888888;

  }  
.white-popup {
  position: relative;
  background: #FFF;
  padding: 20px;
  width: auto;
  max-width: 80%;
  margin: 20px auto;
} 
.ui-btn-width {
    width: 200px !important;
}  
  </style>

 
</head>
<body>
<div align="center"  data-role="page" id="Surveys"> 

	<div   data-role="header" data-position="fixed">
		
		<table width = "100%">
			<TR height="70px">
				<TD width = "20%" Valign="bottom" align="left"><a href='#' onClick="gotoSurveyQuestions()" class="ui-btn-width ui-btn ui-btn-inline ui-icon-back ui-corner-all ui-shadow ui-btn-icon-left">Survey Questions</a></td>
				<TD width = "20%" Valign="bottom" align="center"><a href='#' onClick="deleteSurveyDetailData()" class="ui-btn-width ui-btn ui-btn-inline ui-icon-delete ui-corner-all ui-shadow ui-btn-icon-left">Delete</a></TD>
				<TD width = "20%" valign="Top" align= "center"><h1 style="font-size: 150%"><B>Surveys</B></H1></TD>
				<TD width = "20%" Valign="bottom" align="center"><a href='#' onClick="updateSurveyDetailData()" class="ui-btn-width ui-btn ui-btn-inline ui-icon-edit ui-corner-all ui-shadow ui-btn-icon-left">Update Survey Question</a></td>
				<TD width = "20%" Valign="bottom" align="right"><a href='#popupCreate' onClick="setCreatedDate()" class="open-popup-link ui-btn-width ui-btn ui-btn-inline ui-icon-plus ui-corner-all ui-shadow ui-btn-icon-left">Create Question Answer</a></TD>
			</TR>
		</table>		
	
	</div>  
 

	<div  data-role="content">	
		<DIV>
<TABLE width = "90%">

						<TR>
						<TD width="15%"><label for="Group" class="select">Group:</label></TD><TD width="35%"><select id="QGroup" name="QGroup" ></select></TD>

						<TD width="15%"><label for="SortSeq" class="select">SortSeq:</label></TD><TD width="35%" ><input id="SortSeq" name="SortSeq" type="text"  value=""/></TD>
						</TR>
						<TR>
						<TD width="15%"><label for="Name" class="select">Name:</label></TD><TD width="35%" ><input id="Name" name="Name" type="text"  value=""/></TD>
			
						<TD width="15%"><label for="Type" class="select">Type:</label></TD><TD  width="35%">
						    <select name="QType" id="QType">
														   
								<option value="1">CheckBox</option>
								<option value="2">Radio</option>
								<option value="3">Text</option>
								<option value="4">Number</option>
								<option value="5">TextArea</option>
								<option value="6">Select</option>
								<option value="7">Slider</option>
								<option value="8">Date</option>
								<option value="9">Time</option>
								<option value="10">Group</option>
							
							</select>
						</TD>
						</TR>
						<TR>
						<TD width="15%"><label for="Description" class="select">Description:</label></TD><TD colspan = "3"><textarea id="Description" ></textarea></TD>
						</TR>
						<TR  id="defaultline">
						<TD width="15%"><label for="Default" class="select">Default: </label></TD><TD colspan = "3" width="35%" ><input id="Default" name="Default" type="text"  value=""/></TD>
						
						</TR>
						<TR>
						<TD width="15%"><label for="Next" class="select">Next Question: </label></TD><TD colspan = "3" width="35%" ><select id="Next" name="Next" ></select></TD>
						</TR>
						<TR id="attrline1">
						<TD width="15%"><label id="Attribute1Label" name="Attribute1Label" for="Attribute1" >Attribute1: </label></TD><TD width="35%" ><input id="Attribute1" name="Attribute1" type="text"  value=""/></TD>
						<TD width="15%"><label id="Attribute2Label" name="Attribute2Label" for="Attribute2" >Attribute2: </label></TD><TD width="35%" ><input id="Attribute2" name="Attribute2" type="text"  value=""/></TD>
						</TR>
						<TR id="attrline2">
						<TD width="15%"><label id="Attribute3Label" name="Attribute3Label" for="Attribute3" >Attribute3: </label></TD><TD width="35%" ><input id="Attribute3" name="Attribute3" type="text"  value=""/></TD>
						<TD width="15%"><label id="Attribute4Label" name="Attribute4Label" for="Attribute4" >Attribute4: </label></TD><TD width="35%" ><input id="Attribute4" name="Attribute4" type="text"  value=""/></TD>
						</TR>
					
					</TABLE>
		</DIV>

<DIV>
<a href='#popupPreview' onClick="buildPreview()" class="open-popup-link ui-btn-width ui-btn ui-btn-inline ui-icon-go ui-corner-all ui-shadow ui-btn-icon-left">Preview</a>
			<table   cellspacing="0"  style="border-spacing: 0;" class="tablesorter1">
				<thead >
					<tr>
					

						<th width = "20%">Code</th>
						
						<th width = "40%">Description</th>
						<th width = "40%">Default</th>


					</tr>

				</thead>
				<tbody id="SurveysList" name="SurveysList">
					

				</tbody>
			</table>
		</DIV>
		<div style='display:none'>	
			<div id="popupCreate"  class="white-popup mfp-hide">			
				<div style="background-color:#E9E9E9" align="center"><h1>Create Survey Question</h1></div>
				<div  >
				
					<TABLE width = "90%">


						<TR>
						<TD width="20%"><label for="Code" class="select">Code: </label></TD><TD ><input id="Code" name="Code" type="text"  value=""/></TD>
						</TR>
						<TR>
						<TD width="20%"><label for="Description" class="select">Description:</label></TD><TD ><textarea id="Description" ></textarea></TD>
						</TR>
						<TR>
						<TD width="20%"><label for="Default" class="select">Default: </label></TD><TD ><input id="Default" name="Default" type="text"  value=""/></TD>
						</TR>
						
					
					</TABLE>
					<TABLE width="100%">
						<TR><TD align="left"><a onClick="PopupClose('CANCEL')" class="ui-btn ui-corner-all ui-shadow ui-btn-inline" >Cancel</a></TD>
							<TD align="right"><a onClick="PopupClose('SAVE')" class="ui-btn ui-corner-all ui-shadow ui-btn-inline" >Save</a></TD></TR> 
					</TABLE>    

				</div>
			</div>
			<div id="popupPreview"  class="white-popup mfp-hide">			
				<div style="background-color:#E9E9E9" align="center"><h1>Preview Survey Question</h1></div>
				<div  >
					<div id="PreviewQuestion">
					</div>
					<TABLE width="100%">
						<TR><TD align="center"><a onClick="PopupClose('CANCEL')" class="ui-btn ui-corner-all ui-shadow ui-btn-inline" >Close</a></TD>
							
					</TABLE>    

				</div>
			</div>
		</div>



		
		
		
	</div>	


	

</div>





<Script>
var DeleteClicked=false;
var PopupCloseType="";
var SurveyID = getURLParameters("SurveyID");
var SurveyDetailID = getURLParameters("id");
db.transaction(function(tx) {

		tx.executeSql("Select * from SurveysDetail where surveyid = '"+SurveyID+"' and id = '"+SurveyDetailID+"'", [], function(tx, result) {
			
			item = result.rows.item(0);

			//$( "#Group").val(item['groupcode']).trigger('change');
			$( "#SortSeq").val(item['sortseq']);
			$( "#Name").val(item['name']);
			$( "#QType").val(item['type']).trigger('change');

			$( "#Default").val(item['defaultval']);
			$( "#Description").val(item['description']);
			//$( "#Next").val(item['next']).trigger('change')
			
			$( "#Attribute1").val(item['attribute1']);
			$( "#Attribute2").val(item['attribute2']);
			$( "#Attribute3").val(item['attribute3']);
			$( "#Attribute4").val(item['attribute4']);
			BuildNextQuestions(item['next']);
			BuildGroups(item['groupcode']);
			$( "#SurveyDetails").trigger('change');


			BuildSurveysDetailList();
		});

	});
function deleteSurveyDetailData(){

	deleteAllSurveysDetail(SurveyDetailID);
	gotoSurveyQuestions();

}
function updateSurveyDetailData(){
			updateSurveysDetail(SurveyDetailID, $('#QGroup').val(),$('#SortSeq').val(),$('#Name').val(), $('#QType').val(),$('#Description').val(),$('#Default').val(), $('#Next').val(),$('#Attribute1').val(),$('#Attribute2').val(),$('#Attribute3').val(),$('#Attribute4').val())
alert("Question has been updated");

}
function gotoSurveyQuestions()
{
location.href="SurveysDetail.htm?id="+SurveyID
}

function setCreatedDate(){
			$( "#DateCreated").val(getDate()+" "+getTime());
			$( "#DateCreated").trigger('create');

}

function DeleteSurveysQuestion(id)
{

DeleteClicked=true;
db.transaction(function(tx) {
	tx.executeSql("DELETE from Surveys where id = '"+id+"'", [], function(tx, result) {
		
			 location.reload();
		});
	});
}
function PopupClose(mode)
{
	PopupCloseType=mode;
	if(mode=="SAVE"){
		//alert("gg");
		createSurveysDetailAnswers(SurveyID,SurveyDetailID, "",$('#Code').val(),$('#Description').val(),$('#Default').val())
		location.reload(false);
		}
	

	$.magnificPopup.close();
}







function zeroFill( number, width )
{
  width -= number.toString().length;
  if ( width > 0 )
  {
    return new Array( width + (/\./.test( number ) ? 2 : 1) ).join( '0' ) + number;
  }
  return number + ""; // always return a string
}
function isEven(value) {
return (value%2 == 0);
}
function BuildSurveysDetailList(){
var Stripe="";
var HTMLToOutput="";
var SQLStatement="";
SQLStatement="SELECT * From SurveysDetailAnswers where surveyid = '"+SurveyID+"' and detailid = '"+SurveyDetailID+"'"

	db.transaction(function(tx) {

		tx.executeSql(SQLStatement, [], function(tx, result) {
			//alert(result.rows.length)

				for (var n = 0; n < result.rows.length; n++) {
					item = result.rows.item(n);
					Stripe="";
					if (isEven(n)){
						Stripe='stripe';
						}

					HTMLToOutput+= '	<tr class="'+Stripe+'">';	
					HTMLToOutput+= '			<td hidden>'+item['id']+'</td>';
					HTMLToOutput+= '			<td>'+item['answercode']+'</td>';
					HTMLToOutput+= '			<td>'+item['description']+'</td>';
					HTMLToOutput+= '			<td>'+item['defaultval']+'</td>';

					HTMLToOutput+= '			</tr>';
	}

			$( "#SurveysList").html(HTMLToOutput);
			$( "#SurveysList").trigger('create');
			addRowHandlers();
			SetTableSort();
		});

	});

}
function BuildNextQuestions(qno){
//alert(qno)
var Stripe="";
var HTMLToOutput="";
var SQLStatement="";
var selected=""
SQLStatement="SELECT * From SurveysDetail where surveyid = '"+SurveyID+"'"

	db.transaction(function(tx) {

		tx.executeSql(SQLStatement, [], function(tx, result) {
			//alert(result.rows.length)

				for (var n = 0; n < result.rows.length; n++) {
					item = result.rows.item(n);


					if (item['id']==qno){
					
						selected=" selected='selected'";
						}else{
						selected="";
						}
						//alert(selected);
					HTMLToOutput+= '<option value="'+item['id']+'" '+selected+'>'+item['name']+'</option>';

	}
	if (qno=="-1"){
					
						selected=" selected='selected'";
						}else{
						selected="";
						}
HTMLToOutput+= '<option value="-1" '+selected+'>End of Questions</option>';
			$( "#Next").html(HTMLToOutput);
			$( "#Next").trigger('change');

		});

	});

}
function BuildGroups(grpno){

var Stripe="";
var HTMLToOutput="";
var SQLStatement="";
var selected=""

SQLStatement="SELECT * From SurveysDetail where surveyid = '"+SurveyID+"' and type = '10'"

	db.transaction(function(tx) {

		tx.executeSql(SQLStatement, [], function(tx, result) {
			//alert(result.rows.length)

				for (var n = 0; n < result.rows.length; n++) {
					item = result.rows.item(n);
					if (item['id']==grpno){
					
						selected=" selected='selected'";
						}else{
						selected="";
						}

				
					HTMLToOutput+= '<option value="'+item['id']+'" '+selected+'>'+item['name']+'</option>';

	}
	if (grpno=="-1"){
					
						selected=" selected='selected'";
						}else{
						selected="";
						}
HTMLToOutput+= '<option value="-1"'+selected+'>Single Question</option>';
	if (grpno=="-2"){
					
						selected=" selected='selected'";
						}else{
						selected="";
						}
HTMLToOutput+= '<option value="-2"'+selected+'>Group Question</option>';

			$( "#QGroup").html(HTMLToOutput);
			$( "#QGroup").trigger('change');

		});

	});

}
function buildPreview(){
$("#Type").val("5") ;	
var Stripe="";
var HTMLToOutput="Name: "+$('#Name').val()+"<BR>"+ getSurveyType($('#QType').val())+"<BR>"
var SQLStatement="";
SQLStatement="SELECT * From SurveysDetailAnswers where surveyid = '"+SurveyID+"' and detailid = '"+SurveyDetailID+"'"
var options="";
	db.transaction(function(tx) {

		tx.executeSql(SQLStatement, [], function(tx, result) {
			//alert(result.rows.length)

				for (var n = 0; n < result.rows.length; n++) {
					item = result.rows.item(n);
					if($('#QType').val()=="1"){

						options+= '<TR  height ="30px"><TD td valign="top" width="10%"><input type="checkbox" id= "CB'+n+'" name= "CB'+n+'"></td><td valign="bottom" width="90%">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';			
						options+= item['description']+'</td></tr>';

					}
					if($('#QType').val()=="2"){

						options+= '	<label for "radio'+n+'"><input type="radio" id="radio'+n+'">';			
						options+= item['description']+'</label>';

					}

					if($('#QType').val()=="6"){

						options+= '	<option>'+item['description']+'</option>';
					}
				}
					if($('#QType').val()=="3"){

						HTMLToOutput= '	<BR><input id="Code" name="Code" type="text"  value=""/>';
					}
					if($('#QType').val()=="4"){

						HTMLToOutput= '	<BR><input id="Code" name="Code" type="number"  value=""/>';
					}
					if($('#QType').val()=="5"){

						HTMLToOutput= '	<BR><textarea></textarea>';
					}
				if($('#QType').val()=="1"){

					HTMLToOutput= '<table>'+options+'</table>'
					//alert(HTMLToOutput);
				}
				if($('#QType').val()=="2"){

					HTMLToOutput= '<fieldset data-role="controlgroup">	'+options+'</fieldset>';
				}
				if($('#QType').val()=="6"){

					HTMLToOutput= '	<BR><select name="Select" id="Select">'+options+'</select>';
				}
				if($('#QType').val()=="7"){
						HTMLToOutput= '	<BR><label for="slider-1">Slider:</label>'
					HTMLToOutput+= '<input type="range" name="slider-1" id="slider-1" min="'+$('#Attribute1').val()+'" max="'+$('#Attribute2').val()+'" value="'+$('#Attribute3').val()+'">'

				}
			
			$( "#PreviewQuestion").html(HTMLToOutput);
			$( "#PreviewQuestion").trigger('create');

		});

	});
}

$('.open-popup-link').magnificPopup({
  type:'inline',
  closeOnBgClick: false,
  showCloseBtn:false,
  midClick: true, // Allow opening popup on middle mouse click. Always set it to true if you don't provide alternative source in href.
  callbacks: {


//$("[data-role='footer']").hide();
    },
    close: function() {
		alert(PopupCloseType);
	
		if (PopupCloseType!="CANCEL"){
	
			location.reload(false);
			}



	}
});





  
function SetTableSort()
{
  
	$('table').tablesorter({

		// *** APPEARANCE ***
		// Add a theme - try 'blackice', 'blue', 'dark', 'default'
		//  'dropbox', 'green', 'grey' or 'ice'
		// to use 'bootstrap' or 'jui', you'll need to add the "uitheme"
		// widget and also set it to the same name
		// this option only adds a table class name "tablesorter-{theme}"
		theme: 'jui',

		// fix the column widths
		widthFixed: false,

		// Show an indeterminate timer icon in the header when the table
		// is sorted or filtered
		showProcessing: false,

		// header layout template (HTML ok); {content} = innerHTML,
		// {icon} = <i/> (class from cssIcon)
		headerTemplate: '{content}{icon}',

		// return the modified template string
		onRenderTemplate: null, // function(index, template){ return template; },

		// called after each header cell is rendered, use index to target the column
		// customize header HTML
		onRenderHeader: function (index) {
			// the span wrapper is added by default
			$(this).find('div.tablesorter-header-inner').addClass('roundedCorners');
		},

		// *** FUNCTIONALITY ***
		// prevent text selection in header
		cancelSelection: true,

		// other options: "ddmmyyyy" & "yyyymmdd"
		dateFormat: "mmddyyyy",

		// The key used to select more than one column for multi-column
		// sorting.
		sortMultiSortKey: "shiftKey",

		// key used to remove sorting on a column
		sortResetKey: 'ctrlKey',

		// false for German "1.234.567,89" or French "1 234 567,89"
		usNumberFormat: true,

		// If true, parsing of all table cell data will be delayed
		// until the user initializes a sort
		delayInit: false,

		// if true, server-side sorting should be performed because
		// client-side sorting will be disabled, but the ui and events
		// will still be used.
		serverSideSorting: false,

		// *** SORT OPTIONS ***
		// These are detected by default,
		// but you can change or disable them
		// these can also be set using data-attributes or class names
		headers: {
			// set "sorter : false" (no quotes) to disable the column
			0: {
				sorter: "text"
			},
			1: {
				sorter: "text"
			},
			2: {
				sorter: "date"
			},
			3: {
				sorter: "text"
			},
			4: {
				sorter: "text"
			},
			5: {
				sorter: "text"
			},
			6: {
				sorter: "text"
			},
			7: {
				sorter: "text"
			},
			8: {
				sorter: "false"
			}
		},

		// ignore case while sorting
		ignoreCase: true,

		// forces the user to have this/these column(s) sorted first
		sortForce: null,
		// initial sort order of the columns, example sortList: [[0,0],[1,0]],
		// [[columnIndex, sortDirection], ... ]
		sortList: [
			[0, 0]

		],
		// default sort that is added to the end of the users sort
		// selection.
		sortAppend: null,

		// starting sort direction "asc" or "desc"
		sortInitialOrder: "asc",

		// Replace equivalent character (accented characters) to allow
		// for alphanumeric sorting
		sortLocaleCompare: false,

		// third click on the header will reset column to default - unsorted
		sortReset: false,

		// restart sort to "sortInitialOrder" when clicking on previously
		// unsorted columns
		sortRestart: false,

		// sort empty cell to bottom, top, none, zero
		emptyTo: "bottom",

		// sort strings in numerical column as max, min, top, bottom, zero
		stringTo: "max",

		// extract text from the table - this is how is
		// it done by default
		textExtraction: {
			0: function (node) {
				return $(node).text();
			},
			1: function (node) {
				return $(node).text();
			}
		},

		// use custom text sorter
		// function(a,b){ return a.sort(b); } // basic sort
		textSorter: null,

		// *** WIDGETS ***

		// apply widgets on tablesorter initialization
		initWidgets: true,

		// include zebra and any other widgets, options:
		// 'columns', 'filter', 'stickyHeaders' & 'resizable'
		// 'uitheme' is another widget, but requires loading
		// a different skin and a jQuery UI theme.
		widgets: ['uitheme',  'columns'],

		widgetOptions: {
		  // extra class name added to the sticky header row
		  stickyHeaders : '',
		  // number or jquery selector targeting the position:fixed element
		  stickyHeaders_offset : 50,
		  // added to table ID, if it exists
		  stickyHeaders_cloneId : '-sticky',
		  // trigger "resize" event on headers
		  stickyHeaders_addResizeEvent : true,
		  // if false and a caption exist, it won't be included in the sticky header
		  stickyHeaders_includeCaption : true,
		  // The zIndex of the stickyHeaders, allows the user to adjust this to their needs
		  stickyHeaders_zIndex : 2,
		  // jQuery selector or object to attach sticky header to
		  stickyHeaders_attachTo : null,
		  // scroll table top into view after filtering
		  stickyHeaders_filteredToTop: true,
			// zebra widget: adding zebra striping, using content and
			// default styles - the ui css removes the background
			// from default even and odd class names included for this
			// demo to allow switching themes
			// [ "even", "odd" ]
			zebra: [
				"ui-widget-content even",
				"ui-state-default odd"],

			// uitheme widget: * Updated! in tablesorter v2.4 **
			// Instead of the array of icon class names, this option now
			// contains the name of the theme. Currently jQuery UI ("jui")
			// and Bootstrap ("bootstrap") themes are supported. To modify
			// the class names used, extend from the themes variable
			// look for the "$.extend($.tablesorter.themes.jui" code below
			uitheme: 'jui',

			// columns widget: change the default column class names
			// primary is the 1st column sorted, secondary is the 2nd, etc
			columns: [
				"primary",
				"secondary",
				"tertiary"],

			// columns widget: If true, the class names from the columns
			// option will also be added to the table tfoot.
			columns_tfoot: true,

			// columns widget: If true, the class names from the columns
			// option will also be added to the table thead.
			columns_thead: true,

			// filter widget: If there are child rows in the table (rows with
			// class name from "cssChildRow" option) and this option is true
			// and a match is found anywhere in the child row, then it will make
			// that row visible; default is false
			filter_childRows: false,

			// filter widget: If true, a filter will be added to the top of
			// each table column.
			filter_columnFilters: true,

			// filter widget: css class applied to the table row containing the
			// filters & the inputs within that row
			filter_cssFilter: "tablesorter-filter",

			// filter widget: Customize the filter widget by adding a select
			// dropdown with content, custom options or custom filter functions
			// see http://goo.gl/HQQLW for more details
			filter_functions: null,

			// filter widget: Set this option to true to hide the filter row
			// initially. The rows is revealed by hovering over the filter
			// row or giving any filter input/select focus.
			filter_hideFilters: false,

			// filter widget: Set this option to false to keep the searches
			// case sensitive
			filter_ignoreCase: true,

			// filter widget: jQuery selector string of an element used to
			// reset the filters.
			filter_reset: null,

			// Delay in milliseconds before the filter widget starts searching;
			// This option prevents searching for every character while typing
			// and should make searching large tables faster.
			filter_searchDelay: 300,

			// Set this option to true if filtering is performed on the server-side.
			filter_serversideFiltering: false,

			// filter widget: Set this option to true to use the filter to find
			// text from the start of the column. So typing in "a" will find
			// "albert" but not "frank", both have a's; default is false
			filter_startsWith: false,

			// filter widget: If true, ALL filter searches will only use parsed
			// data. To only use parsed data in specific columns, set this option
			// to false and add class name "filter-parsed" to the header
			filter_useParsedData: false,

			// Resizable widget: If this option is set to false, resized column
			// widths will not be saved. Previous saved values will be restored
			// on page reload
			resizable: true,

			// saveSort widget: If this option is set to false, new sorts will
			// not be saved. Any previous saved sort will be restored on page
			// reload.
			saveSort: true,

			// stickyHeaders widget: css class name applied to the sticky header
			stickyHeaders: "tablesorter-stickyHeader"

		},

		// *** CALLBACKS ***
		// function called after tablesorter has completed initialization
		initialized: function (table) {},

		// *** CSS CLASS NAMES ***
		tableClass: 'tablesorter',
		cssAsc: "tablesorter-headerSortUp",
		cssDesc: "tablesorter-headerSortDown",
		cssHeader: "tablesorter-header",
		cssHeaderRow: "tablesorter-headerRow",
		cssIcon: "tablesorter-icon",
		cssChildRow: "tablesorter-childRow",
		cssInfoBlock: "tablesorter-infoOnly",
		cssProcessing: "tablesorter-processing",

		// *** SELECTORS ***
		// jQuery selectors used to find the header cells.
		selectorHeaders: '> thead th, > thead td',

		// jQuery selector of content within selectorHeaders
		// that is clickable to trigger a sort.
		selectorSort: "th, td",

		// rows with this class name will be removed automatically
		// before updating the table cache - used by "update",
		// "addRows" and "appendCache"
		selectorRemove: "tr.remove-me",

		// *** DEBUGING ***
		// send messages to console
		debug: false

	});
}
// Extend the themes to change any of the default class names ** NEW ** 
$.extend($.tablesorter.themes.jui, {
    // change default jQuery uitheme icons - find the full list of icons 
    // here: http://jqueryui.com/themeroller/ (hover over them for their name) 
    table: 'ui-widget ui-widget-content ui-corner-all', // table classes 
    header: 'ui-widget-header ui-corner-all ui-state-default', // header classes 
	footerRow: '',
	footerCells: '',
    icons: 'ui-icon',    // icon class added to the <i> in the header 
    sortNone: 'ui-icon-carat-2-n-s',
    sortAsc: 'ui-icon-carat-1-n',
    sortDesc: 'ui-icon-carat-1-s',
    active: 'ui-state-active', // applied when column is sorted 
    hover: 'ui-state-hover', // hover class 
    filterRow: '',
    even: 'ui-widget-content', // even row zebra striping 
    odd: 'ui-state-default' // odd row zebra striping 
});

$.extend($.tablesorter.themes.bootstrap, {
    // these classes are added to the table. To see other table classes available,
    // look here: http://twitter.github.com/bootstrap/base-css.html#tables
    table: 'table table-bordered table-striped',
    header: 'bootstrap-header', // give the header a gradient background
	footerRow  : '',
	footerCells: '',
    icons: '', // add "icon-white" to make them white; class added to the <i>
    sortNone: 'bootstrap-icon-unsorted',
    sortAsc: 'icon-chevron-up',
    sortDesc: 'icon-chevron-down',
    active: '', // applied when column is sorted
    hover: '', // use custom css here - bootstrap class may not override it
    filterRow: '', // filter row class
    even: '', // odd row zebra striping
    odd: '' // even row zebra striping
});
function addRowHandlers() {
    var table = document.getElementById("SurveysList");
    var rows = table.getElementsByTagName("tr");
    for (i = 0; i < rows.length; i++) {
        var currentRow = table.rows[i];
        var createClickHandler = 
            function(row) 
            {
                return function() { 
                                        var cell = row.getElementsByTagName("td")[0];
                                        var id = cell.innerHTML;
										
										//location.href="SurveysDetailAnswers.htm?SurverID="+SurveyID+"&id="+id
				
								
                                 
                                 };
            };

        currentRow.onclick = createClickHandler(currentRow);
    }
	SetTableSort();
}

 $('#QType').change(function() {
		formatScreen($(this).find(':selected').val());
        

    });

	 $('#Group').change(function() {
		
        

    });
function formatScreen(type)
{
if (type === '1') {
            $('#attrline1').hide();
			$('#attrline2').hide();
			}
		if (type === '2') {
            $('#attrline1').hide();
			$('#attrline2').hide();
			} 
        if (type === '3') {
            $('#attrline1').hide();
			$('#attrline2').hide();
			}
		if (type === '4') {
            $('#attrline1').hide();
			$('#attrline2').hide();
			} 
        if (type === '5') {
            $('#attrline1').hide();
			$('#attrline2').hide();
			}
		if (type === '6') {
            $('#attrline1').hide();
			$('#attrline2').hide();
			} 
        if (type === '7') {
			$('#Attribute1Label').text("Min");
			$('#Attribute2Label').text("Max");
			$('#Attribute3Label').text("Value");
			$('#Attribute4Label').hide();
			$('#Attribute4').hide();
            $('#attrline1').show();
			$('#attrline2').show();
			}
		if (type=== '8') {
            $('#attrline1').hide();
			$('#attrline2').hide();
			}
		if (type=== '9') {
            $('#attrline1').hide();
			$('#attrline2').hide();
			} 
        if (type === '10') {
            $('#attrline1').hide();
			$('#attrline2').hide();
			
			}			

}

</script>


</body>


</html>

